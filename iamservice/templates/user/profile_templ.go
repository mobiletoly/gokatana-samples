// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package user

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/mobiletoly/gokatana-samples/iamservice/internal/core/swagger"
	"github.com/mobiletoly/gokatana-samples/iamservice/templates/common"
)

func EditProfile(profile *swagger.UserProfileResponse) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"space-y-6\"><div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\"><h2 class=\"text-2xl font-bold text-gray-900\">Edit Profile</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = common.BackButton("/web/user/account", "Back to Account").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><div id=\"form-messages\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ProfileFormFields(profile).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ProfileFormFields(profile *swagger.UserProfileResponse) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"bg-white border border-gray-200 rounded-lg p-6 max-w-2xl\"><h3 class=\"text-lg font-medium text-gray-900 mb-6\">Profile Information</h3><form hx-put=\"/web/user/profile/update\" hx-target=\"#form-messages\" hx-swap=\"innerHTML\" class=\"space-y-6\" id=\"profile-form\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile == nil || profile.IsMetric {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " data-units=\"metric\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " data-units=\"imperial\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " _=\"on convertMetric\n\t\t\t     get #weight-lbs.value then put it as Float into lbs\n\t\t\t     if lbs > 0 then put (lbs / 2.20462) into #weight-kg.value end\n\t\t\t     get #height-feet.value then put it as Float or 0 into feet\n\t\t\t     get #height-inches.value then put it as Float or 0 into inches\n\t\t\t     if feet > 0 or inches > 0\n\t\t\t       set totalInches to (feet * 12) + inches\n\t\t\t       set cm to totalInches * 2.54\n\t\t\t       put cm as Int into #height-cm.value\n\t\t\t     end\n\n\t\t\t     on convertImperial\n\t\t\t     get #weight-kg.value then put it as Float into kg\n\t\t\t     if kg > 0 then put (kg * 2.20462) into #weight-lbs.value end\n\t\t\t     get #height-cm.value then put it as Float into cm\n\t\t\t     if cm > 0\n\t\t\t       set totalInches to cm / 2.54\n\t\t\t       set feetFloat to totalInches / 12\n\n\t\t\t       js(totalInches)\n\t\t\t         var totalInchesRounded = Math.round(totalInches);\n\t\t\t         var feet = Math.floor(totalInchesRounded / 12);\n\t\t\t         var inches = totalInchesRounded % 12;\n\t\t\t         return {feet: feet, inches: inches};\n\t\t\t       end then put the result into heightResult\n\t\t\t       put heightResult.feet as Int into #height-feet.value\n\t\t\t       put heightResult.inches as Int into #height-inches.value\n\t\t\t     end\n\t\t\t     \"><!-- Unit Preferences Section --><div class=\"border-b border-gray-200 pb-6\"><h4 class=\"text-md font-medium text-gray-900 mb-4\">Unit Preferences</h4><div class=\"space-y-2\"><label class=\"inline-flex items-center\"><input type=\"radio\" name=\"isMetric\" value=\"true\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile == nil || profile.IsMetric {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " checked")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, " class=\"form-radio h-4 w-4 text-blue-600 transition duration-150 ease-in-out\" _=\"on change if me.checked then set @data-units of #profile-form to 'metric' then trigger convertMetric\"> <span class=\"ml-2 text-sm text-gray-700\">Metric (kg, cm)</span></label> <label class=\"inline-flex items-center\"><input type=\"radio\" name=\"isMetric\" value=\"false\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && !profile.IsMetric {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, " checked")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " class=\"form-radio h-4 w-4 text-blue-600 transition duration-150 ease-in-out\" _=\"on change if me.checked then set @data-units of #profile-form to 'imperial' then trigger convertImperial\"> <span class=\"ml-2 text-sm text-gray-700\">Imperial (lbs, ft/in)</span></label></div></div><div class=\"grid gap-6 md:grid-cols-2\"><div><!-- Metric height label --><label for=\"height-cm\" class=\"block text-sm font-medium text-gray-700 mb-1 metric-label\">Height (cm)</label><!-- Imperial height label --><label for=\"height-feet\" class=\"block text-sm font-medium text-gray-700 mb-1 imperial-label\">Height (ft/in)</label><!-- Metric height input (cm) --><div id=\"height-metric\"><input type=\"number\" id=\"height-cm\" name=\"height\" min=\"50\" max=\"300\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Height != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(formatHeightCm(*profile.Height))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 114, Col: 47}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, " class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm metric-input\" placeholder=\"Enter height in cm\"></div><!-- Imperial height inputs (ft/in) --><div id=\"height-imperial\" class=\"flex space-x-2\"><input type=\"number\" id=\"height-feet\" name=\"height-feet\" min=\"3\" max=\"8\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Height != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(formatHeightFeet(*profile.Height))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 129, Col: 49}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, " class=\"block w-1/2 px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm imperial-input\" placeholder=\"Feet\"> <input type=\"number\" id=\"height-inches\" name=\"height-inches\" min=\"0\" max=\"11\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Height != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(formatHeightInches(*profile.Height))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 141, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, " class=\"block w-1/2 px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm imperial-input\" placeholder=\"Inches\"></div></div><div><!-- Metric weight label and input --><label for=\"weight-kg\" class=\"block text-sm font-medium text-gray-700 mb-1 metric-label\">Weight (kg)</label> <input type=\"number\" id=\"weight-kg\" name=\"weight-kg\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Weight != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(formatWeightFromGrams(*profile.Weight))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 158, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, " placeholder=\"Enter weight in kg (e.g., 89.85)\" class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm metric-input\"><!-- Imperial weight label and input --><label for=\"weight-lbs\" class=\"block text-sm font-medium text-gray-700 mb-1 imperial-label\">Weight (lbs)</label> <input type=\"number\" id=\"weight-lbs\" name=\"weight-lbs\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Weight != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(formatWeightFromGramsToPounds(*profile.Weight))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 172, Col: 61}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, " placeholder=\"Enter weight in lbs (e.g., 198.5)\" class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm imperial-input\"></div></div><div class=\"grid gap-6 md:grid-cols-2\"><div><label for=\"gender\" class=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label> <select id=\"gender\" name=\"gender\" class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"><option value=\"\">Select gender</option> <option value=\"male\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Gender != nil && (*profile.Gender == "male" || *profile.Gender == "Male") {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, " selected")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, ">Male</option> <option value=\"female\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Gender != nil && (*profile.Gender == "female" || *profile.Gender == "Female") {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, " selected")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, ">Female</option> <option value=\"other\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.Gender != nil && (*profile.Gender == "other" || *profile.Gender == "Other") {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, " selected")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, ">Other</option></select></div><div><label for=\"birthDate\" class=\"block text-sm font-medium text-gray-700 mb-1\">Birth Date</label> <input type=\"date\" id=\"birthDate\" name=\"birthDate\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profile != nil && profile.BirthDate != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, " value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(formatDateForInput(*profile.BirthDate))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `gokatana-samples/iamservice/templates/user/profile.templ`, Line: 219, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, " class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"></div></div><div class=\"flex justify-end space-x-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = common.LoadingSubmitButton("Save Changes", "primary", "md", "save", false).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "<button type=\"button\" hx-get=\"/web/user/account\" hx-target=\"#content\" hx-push-url=\"true\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\">Cancel</button></div></form></div><style>\n\t\t/* Unit system visibility control via data attributes */\n\n\t\t/* Default: Show metric, hide imperial */\n\t\t#height-metric,\n\t\t.metric-label,\n\t\t.metric-input {\n\t\t\tdisplay: block;\n\t\t}\n\n\t\t#height-imperial,\n\t\t.imperial-label,\n\t\t.imperial-input {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t/* When imperial is selected: hide metric, show imperial */\n\t\t[data-units=\"imperial\"] #height-metric,\n\t\t[data-units=\"imperial\"] .metric-label,\n\t\t[data-units=\"imperial\"] .metric-input {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t[data-units=\"imperial\"] #height-imperial,\n\t\t[data-units=\"imperial\"] .imperial-label,\n\t\t[data-units=\"imperial\"] .imperial-input {\n\t\t\tdisplay: block;\n\t\t}\n\n\t\t/* Ensure flex layout is preserved for imperial height inputs */\n\t\t[data-units=\"imperial\"] #height-imperial {\n\t\t\tdisplay: flex;\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ProfileUpdateSuccess() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = common.Alert("success", "Profile Updated Successfully!", "Your profile information has been updated.",
			common.LinkButton("success", "sm", "/web/user/account", "View Account", "")).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
