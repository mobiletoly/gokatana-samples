package user

import (
	"github.com/mobiletoly/gokatana-samples/iamservice/internal/core/swagger"
	"github.com/mobiletoly/gokatana-samples/iamservice/templates/common"
)

templ Account(user *swagger.AuthUserResponse, profile *swagger.UserProfile) {
	<div class="space-y-6">
		<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
			<h2 class="text-2xl font-bold text-gray-900">Account</h2>
		</div>
		<div class="grid gap-6 lg:grid-cols-2">
			<!-- Personal Information -->
			<div class="bg-white border border-gray-200 rounded-lg p-6">
				<h3 class="text-lg font-medium text-gray-900 mb-4">Personal Information</h3>
				<div class="space-y-4">
					<div>
						<label class="block text-sm font-medium text-gray-700">First Name</label>
						<p class="mt-1 text-sm text-gray-900">{ user.FirstName }</p>
					</div>
					<div>
						<label class="block text-sm font-medium text-gray-700">Last Name</label>
						<p class="mt-1 text-sm text-gray-900">{ user.LastName }</p>
					</div>
					<div>
						<label class="block text-sm font-medium text-gray-700">Email</label>
						<p class="mt-1 text-sm text-gray-900">{ user.Email }</p>
					</div>
					<div>
						<label class="block text-sm font-medium text-gray-700">Tenant</label>
						<p class="mt-1 text-sm text-gray-900">{ user.TenantID }</p>
					</div>
				</div>
				<div class="mt-6">
					<button
						hx-get="/web/user/account/edit"
						hx-target="#content"
						hx-push-url="true"
						class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
					>
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
						</svg>
						Update
					</button>
				</div>
			</div>
			<!-- Profile -->
			<div class="bg-white border border-gray-200 rounded-lg p-6">
				<h3 class="text-lg font-medium text-gray-900 mb-4">Profile</h3>
				if profile != nil {
					<div class="space-y-4">
						<div>
							<label class="block text-sm font-medium text-gray-700">Height</label>
							if profile.Height != nil {
								<p class="mt-1 text-sm text-gray-900">{ formatHeightByPreference(*profile.Height, profile.IsMetric) }</p>
							} else {
								<p class="mt-1 text-sm text-gray-500 italic">Not specified</p>
							}
						</div>
						<div>
							<label class="block text-sm font-medium text-gray-700">Weight</label>
							if profile.Weight != nil {
								<p class="mt-1 text-sm text-gray-900">{ formatWeightByPreference(*profile.Weight, profile.IsMetric) }</p>
							} else {
								<p class="mt-1 text-sm text-gray-500 italic">Not specified</p>
							}
						</div>
						<div>
							<label class="block text-sm font-medium text-gray-700">Gender</label>
							if profile.Gender != nil {
								<p class="mt-1 text-sm text-gray-900">{ formatGender(*profile.Gender) }</p>
							} else {
								<p class="mt-1 text-sm text-gray-500 italic">Not specified</p>
							}
						</div>
						<div>
							<label class="block text-sm font-medium text-gray-700">Birth Date</label>
							if profile.BirthDate != nil {
								<p class="mt-1 text-sm text-gray-900">{ formatDate(*profile.BirthDate) }</p>
							} else {
								<p class="mt-1 text-sm text-gray-500 italic">Not specified</p>
							}
						</div>
						<div>
							<label class="block text-sm font-medium text-gray-700">Unit Preference</label>
							<p class="mt-1 text-sm text-gray-900">
								if profile.IsMetric {
									Metric (kg, cm)
								} else {
									Imperial (lbs, ft/in)
								}
							</p>
						</div>
					</div>
				} else {
					<div class="text-center py-4">
						<p class="text-sm text-gray-500">Profile not available</p>
					</div>
				}
				<div class="mt-6">
					<button
						hx-get="/web/user/profile/edit"
						hx-target="#content"
						hx-push-url="true"
						class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
					>
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
						</svg>
						Edit Profile
					</button>
				</div>
			</div>
		</div>
		<!-- Account Information -->
		<div class="bg-white border border-gray-200 rounded-lg p-6">
			<h3 class="text-lg font-medium text-gray-900 mb-4">Account Information</h3>
			<div class="grid gap-4 md:grid-cols-2">
				<div>
					<label class="block text-sm font-medium text-gray-700">Member Since</label>
					<p class="mt-1 text-sm text-gray-900">{ formatDateTime(user.CreatedAt) }</p>
				</div>
				<div>
					<label class="block text-sm font-medium text-gray-700">Last Updated</label>
					<p class="mt-1 text-sm text-gray-900">{ formatDateTime(user.UpdatedAt) }</p>
				</div>
			</div>
		</div>
		<!-- Actions -->
		<div class="bg-gray-50 border border-gray-200 rounded-lg p-6">
			<h3 class="text-lg font-medium text-gray-900 mb-4">Account Actions</h3>
			<div class="flex flex-wrap gap-4">
				<button
					hx-get="/web/user/account/change-password"
					hx-target="#content"
					hx-push-url="true"
					class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
				>
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
					</svg>
					Change Password
				</button>
			</div>
		</div>
	</div>
}

templ EditAccount(user *swagger.AuthUserResponse) {
	<div class="space-y-6">
		<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
			<h2 class="text-2xl font-bold text-gray-900">Edit Personal Information</h2>
			@common.BackButton("/web/user/account", "Back to Account")
		</div>
		<div id="form-messages"></div>
		<div class="bg-white border border-gray-200 rounded-lg p-6 max-w-2xl">
			<h3 class="text-lg font-medium text-gray-900 mb-6">Personal Information</h3>
			<form
				hx-put="/web/user/account/update"
				hx-target="#form-messages"
				hx-swap="innerHTML"
				class="space-y-6"
			>
				<div class="grid gap-6 md:grid-cols-2">
					<div>
						<label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">
							First Name <span class="text-red-500">*</span>
						</label>
						<input
							type="text"
							id="firstName"
							name="firstName"
							required
							value={ user.FirstName }
							class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
							placeholder="Enter your first name"
						/>
					</div>
					<div>
						<label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">
							Last Name <span class="text-red-500">*</span>
						</label>
						<input
							type="text"
							id="lastName"
							name="lastName"
							required
							value={ user.LastName }
							class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
							placeholder="Enter your last name"
						/>
					</div>
				</div>
				<div class="bg-gray-50 p-4 rounded-md">
					<div class="flex">
						<div class="flex-shrink-0">
							<svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
								<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
							</svg>
						</div>
						<div class="ml-3">
							<p class="text-sm text-gray-700">
								<strong>Note:</strong> Email address cannot be changed through this form. Contact support if you need to update your email address.
							</p>
						</div>
					</div>
				</div>
				<div class="flex justify-end space-x-3">
					@common.LoadingSubmitButton("Save Changes", "Saving...", "primary", "md", "save", false)
					<button
						type="button"
						hx-get="/web/user/account"
						hx-target="#content"
						hx-push-url="true"
						class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
					>
						Cancel
					</button>
				</div>
			</form>
		</div>
	</div>
}

templ ChangePassword() {
	<div class="space-y-6">
		<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
			<h2 class="text-2xl font-bold text-gray-900">Change Password</h2>
			@common.BackButton("/web/user/account", "Back to Account")
		</div>
		<div id="form-messages"></div>
		<div class="bg-white border border-gray-200 rounded-lg p-6 max-w-2xl">
			<h3 class="text-lg font-medium text-gray-900 mb-6">Change Your Password</h3>
			<form
				hx-put="/web/user/account/change-password"
				hx-target="#form-messages"
				hx-swap="innerHTML"
				class="space-y-6"
			>
				<div>
					<label for="currentPassword" class="block text-sm font-medium text-gray-700 mb-1">
						Current Password <span class="text-red-500">*</span>
					</label>
					<input
						type="password"
						id="currentPassword"
						name="currentPassword"
						required
						class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
						placeholder="Enter your current password"
					/>
				</div>
				<div>
					<label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">
						New Password <span class="text-red-500">*</span>
					</label>
					<input
						type="password"
						id="newPassword"
						name="newPassword"
						required
						minlength="8"
						class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
						placeholder="Enter your new password (min 8 characters)"
					/>
				</div>
				<div>
					<label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">
						Confirm New Password <span class="text-red-500">*</span>
					</label>
					<input
						type="password"
						id="confirmPassword"
						name="confirmPassword"
						required
						minlength="8"
						class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
						placeholder="Confirm your new password"
					/>
				</div>
				<div class="bg-yellow-50 p-4 rounded-md">
					<div class="flex">
						<div class="flex-shrink-0">
							<svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
								<path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
							</svg>
						</div>
						<div class="ml-3">
							<p class="text-sm text-yellow-700">
								<strong>Password Requirements:</strong> Your password must be at least 8 characters long. Choose a strong password that includes a mix of letters, numbers, and special characters.
							</p>
						</div>
					</div>
				</div>
				<div class="flex justify-end space-x-3">
					@common.LoadingSubmitButton("Change Password", "Changing...", "primary", "md", "key", false)
					<button
						type="button"
						hx-get="/web/user/account"
						hx-target="#content"
						hx-push-url="true"
						class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
					>
						Cancel
					</button>
				</div>
			</form>
		</div>
	</div>
}

templ AccountUpdateSuccess() {
	@common.Alert("success", "Account Updated Successfully!", "Your personal information has been updated.",
		common.LinkButton("success", "sm", "/web/user/account", "View Account", ""))
}

templ PasswordChangeSuccess() {
	@common.Alert("success", "Password Changed Successfully!", "Your password has been updated. Please use your new password for future logins.",
		common.LinkButton("success", "sm", "/web/user/account", "Back to Account", ""))
}
