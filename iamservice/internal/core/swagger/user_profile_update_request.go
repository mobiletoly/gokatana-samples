// Code generated by go-swagger; DO NOT EDIT.

package swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserProfileUpdateRequest User profile update request data
//
// swagger:model UserProfileUpdateRequest
type UserProfileUpdateRequest struct {

	// User birth date in YYYY-MM-DD format
	// Example: 1990-01-15
	// Format: date
	BirthDate *strfmt.Date `json:"birthDate,omitempty"`

	// User gender
	// Example: Male
	Gender *string `json:"gender,omitempty"`

	// User height in centimeters
	// Example: 175
	Height *int64 `json:"height,omitempty"`

	// Whether to use metric units (true) or imperial units (false)
	// Example: true
	IsMetric *bool `json:"isMetric,omitempty"`

	// User weight in grams
	// Example: 70000
	Weight *int64 `json:"weight,omitempty"`
}

// Validate validates this user profile update request
func (m *UserProfileUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBirthDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserProfileUpdateRequest) validateBirthDate(formats strfmt.Registry) error {
	if swag.IsZero(m.BirthDate) { // not required
		return nil
	}

	if err := validate.FormatOf("birthDate", "body", "date", m.BirthDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user profile update request based on context it is used
func (m *UserProfileUpdateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserProfileUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserProfileUpdateRequest) UnmarshalBinary(b []byte) error {
	var res UserProfileUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
