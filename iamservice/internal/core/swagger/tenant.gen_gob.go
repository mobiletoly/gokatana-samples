// Code generated by gobetter; DO NOT EDIT.

package swagger

import (
	"time"
)

func NewCreateTenantRequestBuilder() CreateTenantRequest_Builder_Description {
	return CreateTenantRequest_Builder_Description{root: &CreateTenantRequest{}}
}

type CreateTenantRequest_Builder_Description struct {
	root *CreateTenantRequest
}

type CreateTenantRequest_Builder_Id struct {
	root *CreateTenantRequest
}

func (b CreateTenantRequest_Builder_Description) Description(arg string) CreateTenantRequest_Builder_Id {
	b.root.Description = arg
	return CreateTenantRequest_Builder_Id{root: b.root}
}

type CreateTenantRequest_Builder_Name struct {
	root *CreateTenantRequest
}

func (b CreateTenantRequest_Builder_Id) Id(arg string) CreateTenantRequest_Builder_Name {
	b.root.Id = arg
	return CreateTenantRequest_Builder_Name{root: b.root}
}

type CreateTenantRequest_Builder_GobFinalizer struct {
	root *CreateTenantRequest
}

func (b CreateTenantRequest_Builder_Name) Name(arg string) CreateTenantRequest_Builder_GobFinalizer {
	b.root.Name = arg
	return CreateTenantRequest_Builder_GobFinalizer{root: b.root}
}

func (b CreateTenantRequest_Builder_GobFinalizer) Build() *CreateTenantRequest {
	return b.root
}

func NewTenantResponseBuilder() TenantResponse_Builder_CreatedAt {
	return TenantResponse_Builder_CreatedAt{root: &TenantResponse{}}
}

type TenantResponse_Builder_CreatedAt struct {
	root *TenantResponse
}

type TenantResponse_Builder_Description struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_CreatedAt) CreatedAt(arg time.Time) TenantResponse_Builder_Description {
	b.root.CreatedAt = arg
	return TenantResponse_Builder_Description{root: b.root}
}

type TenantResponse_Builder_Id struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Description) Description(arg string) TenantResponse_Builder_Id {
	b.root.Description = arg
	return TenantResponse_Builder_Id{root: b.root}
}

type TenantResponse_Builder_Name struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Id) Id(arg string) TenantResponse_Builder_Name {
	b.root.Id = arg
	return TenantResponse_Builder_Name{root: b.root}
}

type TenantResponse_Builder_UpdatedAt struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Name) Name(arg string) TenantResponse_Builder_UpdatedAt {
	b.root.Name = arg
	return TenantResponse_Builder_UpdatedAt{root: b.root}
}

type TenantResponse_Builder_GobFinalizer struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_UpdatedAt) UpdatedAt(arg time.Time) TenantResponse_Builder_GobFinalizer {
	b.root.UpdatedAt = arg
	return TenantResponse_Builder_GobFinalizer{root: b.root}
}

func (b TenantResponse_Builder_GobFinalizer) Build() *TenantResponse {
	return b.root
}

func NewTenantsResponseBuilder() TenantsResponse_Builder_Items {
	return TenantsResponse_Builder_Items{root: &TenantsResponse{}}
}

type TenantsResponse_Builder_Items struct {
	root *TenantsResponse
}

type TenantsResponse_Builder_Pagination struct {
	root *TenantsResponse
}

func (b TenantsResponse_Builder_Items) Items(arg []TenantResponse) TenantsResponse_Builder_Pagination {
	b.root.Items = arg
	return TenantsResponse_Builder_Pagination{root: b.root}
}

type TenantsResponse_Builder_GobFinalizer struct {
	root *TenantsResponse
}

func (b TenantsResponse_Builder_Pagination) Pagination(arg PaginationInfo) TenantsResponse_Builder_GobFinalizer {
	b.root.Pagination = arg
	return TenantsResponse_Builder_GobFinalizer{root: b.root}
}

func (b TenantsResponse_Builder_GobFinalizer) Build() *TenantsResponse {
	return b.root
}

func NewUpdateTenantRequestBuilder() UpdateTenantRequest_Builder_Description {
	return UpdateTenantRequest_Builder_Description{root: &UpdateTenantRequest{}}
}

type UpdateTenantRequest_Builder_Description struct {
	root *UpdateTenantRequest
}

type UpdateTenantRequest_Builder_Name struct {
	root *UpdateTenantRequest
}

func (b UpdateTenantRequest_Builder_Description) Description(arg string) UpdateTenantRequest_Builder_Name {
	b.root.Description = arg
	return UpdateTenantRequest_Builder_Name{root: b.root}
}

type UpdateTenantRequest_Builder_GobFinalizer struct {
	root *UpdateTenantRequest
}

func (b UpdateTenantRequest_Builder_Name) Name(arg string) UpdateTenantRequest_Builder_GobFinalizer {
	b.root.Name = arg
	return UpdateTenantRequest_Builder_GobFinalizer{root: b.root}
}

func (b UpdateTenantRequest_Builder_GobFinalizer) Build() *UpdateTenantRequest {
	return b.root
}

func NewListAllTenantsParamsBuilder() ListAllTenantsParams_Builder_Page {
	return ListAllTenantsParams_Builder_Page{root: &ListAllTenantsParams{}}
}

type ListAllTenantsParams_Builder_Page struct {
	root *ListAllTenantsParams
}

type ListAllTenantsParams_Builder_Limit struct {
	root *ListAllTenantsParams
}

func (b ListAllTenantsParams_Builder_Page) Page(arg *int) ListAllTenantsParams_Builder_Limit {
	b.root.Page = arg
	return ListAllTenantsParams_Builder_Limit{root: b.root}
}

type ListAllTenantsParams_Builder_Active struct {
	root *ListAllTenantsParams
}

func (b ListAllTenantsParams_Builder_Limit) Limit(arg *int) ListAllTenantsParams_Builder_Active {
	b.root.Limit = arg
	return ListAllTenantsParams_Builder_Active{root: b.root}
}

type ListAllTenantsParams_Builder_GobFinalizer struct {
	root *ListAllTenantsParams
}

func (b ListAllTenantsParams_Builder_Active) Active(arg *bool) ListAllTenantsParams_Builder_GobFinalizer {
	b.root.Active = arg
	return ListAllTenantsParams_Builder_GobFinalizer{root: b.root}
}

func (b ListAllTenantsParams_Builder_GobFinalizer) Build() *ListAllTenantsParams {
	return b.root
}
