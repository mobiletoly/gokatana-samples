// Code generated by gobetter; DO NOT EDIT.

package swagger

import (
	"time"
)

func NewTenantCreateRequestBuilder() TenantCreateRequest_Builder_Description {
	return TenantCreateRequest_Builder_Description{root: &TenantCreateRequest{}}
}

type TenantCreateRequest_Builder_Description struct {
	root *TenantCreateRequest
}

type TenantCreateRequest_Builder_Id struct {
	root *TenantCreateRequest
}

func (b TenantCreateRequest_Builder_Description) Description(arg string) TenantCreateRequest_Builder_Id {
	b.root.Description = arg
	return TenantCreateRequest_Builder_Id{root: b.root}
}

type TenantCreateRequest_Builder_Name struct {
	root *TenantCreateRequest
}

func (b TenantCreateRequest_Builder_Id) Id(arg string) TenantCreateRequest_Builder_Name {
	b.root.Id = arg
	return TenantCreateRequest_Builder_Name{root: b.root}
}

type TenantCreateRequest_Builder_GobFinalizer struct {
	root *TenantCreateRequest
}

func (b TenantCreateRequest_Builder_Name) Name(arg string) TenantCreateRequest_Builder_GobFinalizer {
	b.root.Name = arg
	return TenantCreateRequest_Builder_GobFinalizer{root: b.root}
}

func (b TenantCreateRequest_Builder_GobFinalizer) Build() *TenantCreateRequest {
	return b.root
}

func NewTenantListResponseBuilder() TenantListResponse_Builder_Pagination {
	return TenantListResponse_Builder_Pagination{root: &TenantListResponse{}}
}

type TenantListResponse_Builder_Pagination struct {
	root *TenantListResponse
}

type TenantListResponse_Builder_Tenants struct {
	root *TenantListResponse
}

func (b TenantListResponse_Builder_Pagination) Pagination(arg PaginationInfo) TenantListResponse_Builder_Tenants {
	b.root.Pagination = arg
	return TenantListResponse_Builder_Tenants{root: b.root}
}

type TenantListResponse_Builder_GobFinalizer struct {
	root *TenantListResponse
}

func (b TenantListResponse_Builder_Tenants) Tenants(arg []TenantResponse) TenantListResponse_Builder_GobFinalizer {
	b.root.Tenants = arg
	return TenantListResponse_Builder_GobFinalizer{root: b.root}
}

func (b TenantListResponse_Builder_GobFinalizer) Build() *TenantListResponse {
	return b.root
}

func NewTenantResponseBuilder() TenantResponse_Builder_CreatedAt {
	return TenantResponse_Builder_CreatedAt{root: &TenantResponse{}}
}

type TenantResponse_Builder_CreatedAt struct {
	root *TenantResponse
}

type TenantResponse_Builder_Description struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_CreatedAt) CreatedAt(arg time.Time) TenantResponse_Builder_Description {
	b.root.CreatedAt = arg
	return TenantResponse_Builder_Description{root: b.root}
}

type TenantResponse_Builder_Id struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Description) Description(arg string) TenantResponse_Builder_Id {
	b.root.Description = arg
	return TenantResponse_Builder_Id{root: b.root}
}

type TenantResponse_Builder_Name struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Id) Id(arg string) TenantResponse_Builder_Name {
	b.root.Id = arg
	return TenantResponse_Builder_Name{root: b.root}
}

type TenantResponse_Builder_UpdatedAt struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_Name) Name(arg string) TenantResponse_Builder_UpdatedAt {
	b.root.Name = arg
	return TenantResponse_Builder_UpdatedAt{root: b.root}
}

type TenantResponse_Builder_GobFinalizer struct {
	root *TenantResponse
}

func (b TenantResponse_Builder_UpdatedAt) UpdatedAt(arg time.Time) TenantResponse_Builder_GobFinalizer {
	b.root.UpdatedAt = arg
	return TenantResponse_Builder_GobFinalizer{root: b.root}
}

func (b TenantResponse_Builder_GobFinalizer) Build() *TenantResponse {
	return b.root
}

func NewTenantUpdateRequestBuilder() TenantUpdateRequest_Builder_Description {
	return TenantUpdateRequest_Builder_Description{root: &TenantUpdateRequest{}}
}

type TenantUpdateRequest_Builder_Description struct {
	root *TenantUpdateRequest
}

type TenantUpdateRequest_Builder_Name struct {
	root *TenantUpdateRequest
}

func (b TenantUpdateRequest_Builder_Description) Description(arg string) TenantUpdateRequest_Builder_Name {
	b.root.Description = arg
	return TenantUpdateRequest_Builder_Name{root: b.root}
}

type TenantUpdateRequest_Builder_GobFinalizer struct {
	root *TenantUpdateRequest
}

func (b TenantUpdateRequest_Builder_Name) Name(arg string) TenantUpdateRequest_Builder_GobFinalizer {
	b.root.Name = arg
	return TenantUpdateRequest_Builder_GobFinalizer{root: b.root}
}

func (b TenantUpdateRequest_Builder_GobFinalizer) Build() *TenantUpdateRequest {
	return b.root
}

func NewGetAllTenantsParamsBuilder() GetAllTenantsParams_Builder_Page {
	return GetAllTenantsParams_Builder_Page{root: &GetAllTenantsParams{}}
}

type GetAllTenantsParams_Builder_Page struct {
	root *GetAllTenantsParams
}

type GetAllTenantsParams_Builder_Limit struct {
	root *GetAllTenantsParams
}

func (b GetAllTenantsParams_Builder_Page) Page(arg *int) GetAllTenantsParams_Builder_Limit {
	b.root.Page = arg
	return GetAllTenantsParams_Builder_Limit{root: b.root}
}

type GetAllTenantsParams_Builder_Active struct {
	root *GetAllTenantsParams
}

func (b GetAllTenantsParams_Builder_Limit) Limit(arg *int) GetAllTenantsParams_Builder_Active {
	b.root.Limit = arg
	return GetAllTenantsParams_Builder_Active{root: b.root}
}

type GetAllTenantsParams_Builder_GobFinalizer struct {
	root *GetAllTenantsParams
}

func (b GetAllTenantsParams_Builder_Active) Active(arg *bool) GetAllTenantsParams_Builder_GobFinalizer {
	b.root.Active = arg
	return GetAllTenantsParams_Builder_GobFinalizer{root: b.root}
}

func (b GetAllTenantsParams_Builder_GobFinalizer) Build() *GetAllTenantsParams {
	return b.root
}
